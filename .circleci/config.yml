version: 2.1
orbs:
  gcp-gcr: circleci/gcp-gcr@0.13.0
  cloudrun: circleci/gcp-cloud-run@1.0.2
# Define the jobs we want to run for this project
jobs:
  test:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: pip install virtualenv poetry invoke && virtualenv ./venv && echo "source ./venv/bin/activate" >> $BASH_ENV
          name: Create virtualenv
      - restore_cache:
          keys:
              - python-cache-4-{{ arch }}-{{ checksum "requirements.txt" }}
      - run: 
          command: poetry install
          name: Install dependencies
      - save_cache:
          key: python-cache-4-{{ arch }}-{{ checksum "requirements.txt" }}
          paths:
              - venv
      - run:
          command: inv lint --check
          name: Run linting
      - run:
          command: PYTHONPATH=$(pwd)/app FLASK_ENV=testing pytest
          name: Run tests
  build_deploy:
    docker:
      - image: cimg/python:3.9.6
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
              - python-cache-4-{{ arch }}-{{ checksum "requirements.txt" }}
      - run:
          command: pip install virtualenv poetry invoke && virtualenv ./venv && echo "source ./venv/bin/activate" >> $BASH_ENV
          name: Create virtualenv
      - run: 
          command: poetry install
          name: Install dependencies
      - save_cache:
          key: python-cache-4-{{ arch }}-{{ checksum "requirements.txt" }}
          paths:
              - venv
      - run:
          # Details for this are here: https://circleci.com/blog/gcp-cloudrun-orb/
          command: |
            echo ${GCP_PROJECT_KEY} | base64 --decode --ignore-garbage > $HOME/gcloud-service-key.json
            echo 'export GOOGLE_CLOUD_KEYS=$(cat $HOME/gcloud-service-key.json)' >> $BASH_ENV
            echo 'export TAG=${CIRCLE_SHA1}' >> $BASH_ENV
            echo 'export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME' >> $BASH_ENV && source $BASH_ENV
            docker build -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME -t us.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME:$TAG .
          name: Run build and deploy
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CLOUD_KEYS
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE
      - gcp-gcr/push-image:
          google-project-id: GOOGLE_PROJECT_ID
          registry-url: "us.gcr.io"
          image: $IMAGE_NAME
      - cloudrun/deploy:
          platform: "managed"
          image: "eu.gcr.io/$GOOGLE_PROJECT_ID/$IMAGE_NAME"
          service-name: "orb-gcp-cloud-run"
          region: $GOOGLE_COMPUTE_ZONE
          unauthenticated: true

# Orchestrate our job run sequence
workflows:
  test_build_deploy:
    jobs:
      - test
      - build_deploy:
          filters:
            branches:
                only:
                    - main
          requires:
              - test